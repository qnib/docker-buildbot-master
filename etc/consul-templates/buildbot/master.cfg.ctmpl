# -*- python -*-
# ex: set filetype=python:

from buildbot.plugins import *

# This is a sample buildmaster config file. It must be installed as
# 'master.cfg' in your buildmaster's base directory.

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

####### WORKERS

{{ file "/opt/qnib/buildbot/etc/workers.cfg" }}

####### CHANGESOURCES

{{ file "/opt/qnib/buildbot/etc/changesources.cfg" }}

####### SCHEDULERS

{{ file "/opt/qnib/buildbot/etc/schedulers.cfg" }}

####### BUILDERS

{{ file "/opt/qnib/buildbot/etc/builders.cfg" }}

####### STATUS TARGETS

{{ file "/opt/qnib/buildbot/etc/status_targets.cfg" }}

####### PROJECT IDENTITY

# the 'title' string will appear at the top of this buildbot installation's
# home pages (linked to the 'titleURL').

c['title'] = "{{ env "BUILDBOT_TITLE" }}"
c['titleURL'] = "{{ env "BUILDBOT_TITLE_URL" }}"

# the 'buildbotURL' string should point to the location where the buildbot's
# internal web server is visible. This typically uses the port number set in
# the 'www' entry below, but with an externally-visible host name which the
# buildbot cannot figure out without some help.

c['buildbotURL'] = "http://{{ env "BUILDBOT_URL" }}:{{ env "BUILDBOT_WWW_PORT" }}/"

# minimalistic config to activate new web UI
c['www'] = dict(port=8010, plugins=dict(waterfall_view={}, console_view={}))

####### DB URL

c['db'] = {
    # This specifies what database buildbot uses to store its state.  You can leave
    # this at its default for all but the largest installations.
    'db_url' : "postgresql://{{ env "POSTGRES_USER" }}:{{ env "POSTGRES_PASSWORD" }}@postgres/{{ env "POSTGRES_DB" }}",
}
